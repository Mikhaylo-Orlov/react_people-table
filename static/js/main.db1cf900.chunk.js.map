{"version":3,"sources":["utils/searchHelper.ts","variables/variables.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","types/SortType.ts","components/PersonLink.tsx","components/SortLink.tsx","components/PeopleTable.tsx","api.ts","utils/filterPeople.ts","components/Loader/Loader.tsx","pages/PeoplePage.tsx","components/Navbar.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","_ref","_ref2","_slicedToArray","key","value","delete","Array","isArray","part","append","set","centuriesValues","Sex","SearchLink","children","params","props","_objectWithoutProperties","_excluded","_useSearchParams","useSearchParams","searchParams","_jsx","Link","_objectSpread","to","search","PeopleFilters","_useSearchParams2","setSearchParams","sex","get","query","centuries","getAll","getParamCenturies","century","includes","filter","concat","_toConsumableArray","_jsxs","className","classNames","Male","Female","type","placeholder","onChange","event","preparedSearch","target","trimStart","map","length","SortType","PersonLink","person","name","born","died","fatherName","motherName","slug","mother","father","userSlug","useParams","SortLink","sortField","sortBy","isReversed","isSelected","sort","order","PeopleTable","people","loading","_Fragment","values","slice","toUpperCase","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","_getPeople","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","then","fetch","response","json","stop","Loader","PeoplePage","_useState","useState","_useState2","setPeople","_useState3","_useState4","hasError","setHasError","_useState5","_useState6","setLoading","filteredPeople","useMemo","visiblePeople","lowerCaseQuery","toLowerCase","String","Math","ceil","person1","person2","NAME","SEX","localeCompare","BORN","DIED","reverse","getFilteredPeople","fetchPeopleFromServer","peopleFromServer","peopleWithParents","sent","find","t0","finish","useEffect","getLinkClass","isActive","Navbar","role","NavLink","HomePage","NotFoundPage","App","Routes","Route","path","element","Navigate","replace","index","ReactDOM","render","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.db1cf900.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","export const centuriesValues = ['16', '17', '18', '19', '20'];\n\nexport enum Sex {\n  Male = 'm',\n  Female = 'f',\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { ChangeEvent } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { centuriesValues, Sex } from '../variables/variables';\nimport { SearchLink } from './SearchLink';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const sex = searchParams.get('sex') || '';\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const getParamCenturies = (century: string) => {\n    return (centuries.includes(century)\n      ? centuries.filter(value => value !== century)\n      : [...centuries, century]);\n  };\n\n  const onQueryChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const preparedSearch = getSearchWith(\n      searchParams,\n      { query: event.target.value.trimStart() || null },\n    );\n\n    setSearchParams(preparedSearch);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={classNames({ 'is-active': !sex })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          className={classNames({ 'is-active': sex === Sex.Male })}\n          params={{ sex: Sex.Male }}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          className={classNames({ 'is-active': sex === Sex.Female })}\n          params={{ sex: Sex.Female }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            value={query}\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={onQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuriesValues.map(century => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={classNames(\n                  'button mr-1',\n                  { 'is-info': centuries.includes(century) },\n                )}\n                params={{\n                  centuries: getParamCenturies(century),\n                }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={classNames(\n                'button is-success',\n                { 'is-outlined': centuries.length > 0 },\n              )}\n              params={{\n                centuries: null,\n              }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            query: null,\n            sex: null,\n            centuries: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","export enum SortType {\n  NAME = 'name',\n  SEX = 'sex',\n  BORN = 'born',\n  DIED = 'died',\n}\n","import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n  const { userSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === userSlug,\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames(\n            { 'has-text-danger': sex === 'f' },\n          )}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <Link\n            to={`/people/${mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {motherName}\n          </Link>\n        ) : (motherName || '-')}\n      </td>\n      <td>\n        {father ? (\n          <Link\n            to={`/people/${father.slug}`}\n          >\n            {fatherName}\n          </Link>\n        ) : (fatherName || '-')}\n      </td>\n    </tr>\n  );\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  sortField: string,\n};\n\nexport const SortLink: React.FC<Props> = ({ sortField }) => {\n  const [searchParams] = useSearchParams();\n  const sortBy = searchParams.get('sort') || '';\n  const isReversed = searchParams.get('order') === 'desc';\n  const isSelected = sortBy === sortField;\n\n  return (\n    <SearchLink params={{\n      sort: isSelected && isReversed\n        ? null\n        : sortField,\n\n      order: isSelected && !isReversed\n        ? 'desc'\n        : null,\n    }}\n    >\n\n      <span className=\"icon\">\n        <i className={classNames('fas', {\n          'fa-sort': !isSelected,\n          'fa-sort-up': isSelected && !isReversed,\n          'fa-sort-down': isSelected && isReversed,\n        })}\n        />\n      </span>\n    </SearchLink>\n  );\n};\n","import { Person } from '../types';\nimport { SortType } from '../types/SortType';\nimport { PersonLink } from './PersonLink';\nimport { SortLink } from './SortLink';\n\ntype Props = {\n  people: Person[],\n  loading: boolean,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  loading,\n}) => {\n  return (\n    <>\n      {(!loading && !people.length) && (\n        <p>\n          There are no people matching the current search criteria\n        </p>\n      )}\n\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            {Object.values(SortType).map(value => (\n              <th key={value}>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  {`${value.slice(0, 1).toUpperCase()}${value.slice(1)}`}\n\n                  <SortLink sortField={value} />\n                </span>\n              </th>\n            ))}\n\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => (\n            <PersonLink\n              key={person.slug}\n              person={person}\n            />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from '../types';\nimport { SortType } from '../types/SortType';\n\nexport const getFilteredPeople = (\n  people: Person[],\n  sex: string,\n  query: string,\n  sortBy: string,\n  order: string,\n  centuries: string[],\n) => {\n  let visiblePeople = [...people];\n\n  if (query) {\n    visiblePeople = visiblePeople.filter(person => {\n      const lowerCaseQuery = query.toLowerCase();\n      const needSymbolsToCheck = (\n        person.name + person.fatherName + person.motherName).toLowerCase();\n\n      return needSymbolsToCheck.includes(lowerCaseQuery);\n    });\n  }\n\n  if (sex) {\n    visiblePeople = visiblePeople.filter(person => person.sex === sex);\n  }\n\n  if (centuries.length > 0) {\n    visiblePeople = visiblePeople.filter(person => (\n      centuries.includes(String(Math.ceil(person.born / 100)))\n    ));\n  }\n\n  if (sortBy) {\n    visiblePeople.sort((person1, person2) => {\n      switch (sortBy) {\n        case SortType.NAME:\n        case SortType.SEX:\n          return person1[sortBy].localeCompare(person2[sortBy]);\n\n        case SortType.BORN:\n        case SortType.DIED:\n          return person1[sortBy] - person2[sortBy];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (order) {\n    visiblePeople.reverse();\n  }\n\n  return visiblePeople;\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { getFilteredPeople } from '../utils/filterPeople';\nimport { Loader } from '../components/Loader';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n  const sex = searchParams.get('sex') || '';\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const order = searchParams.get('order') || '';\n  const sortBy = searchParams.get('sort') || '';\n\n  const filteredPeople = useMemo(() => (\n    getFilteredPeople(\n      people,\n      sex,\n      query,\n      sortBy,\n      order,\n      centuries,\n    )\n  ), [sex, query, centuries, sortBy, order]);\n\n  const fetchPeopleFromServer = async () => {\n    setHasError(false);\n    setLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      const peopleWithParents = peopleFromServer.map(person => ({\n        ...person,\n        mother: peopleFromServer.find(\n          mother => mother.name === person.motherName,\n        ),\n        father: peopleFromServer.find(\n          father => father.name === person.fatherName,\n        ),\n      }));\n\n      setPeople(peopleWithParents);\n      setLoading(false);\n    } catch {\n      setHasError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {loading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <>\n              <div className=\"column is-7-tablet is-narrow-desktop\">\n                <PeopleFilters />\n              </div>\n\n              <div className=\"column\">\n                <div className=\"box table-container\">\n                  <PeopleTable\n                    people={filteredPeople}\n                    loading={loading}\n                  />\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":userSlug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}